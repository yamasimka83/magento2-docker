#!/bin/bash

if [ -d "../public_html" ]
then
    echo "Directory ../public_html exists."
else
    mkdir ../public_html
    echo "Directory ../public_html created."
fi

if [ -f "./env/db.env" ]
then
    echo "File ./env/db.env exists."
else
    cp ./env/db.env.sample ./env/db.env
    echo "File ./env/db.env created."
fi

if [ -f "./images/create_database.sql" ]
then
    echo "File ./images/create_database.sql exists."
else
    cp ./images/create_database.sql.sample ./images/create_database.sql
    echo "File ./images/create_database.sql created."
fi

echo Input config settings

read -prr 'Project name for docker (ex: projectname): ' dockerName
read -prr 'Server name: ' serverName

read -pr 'Nginx http port (default: 80): ' nginxUnsecurePort
nginxUnsecurePort=${nginxUnsecurePort:-80}
read -pr 'Nginx https port (default: 443): ' nginxSecurePort
nginxSecurePort=${nginxSecurePort:-443}
read -pr 'Php-fpm port (default: 9000): ' phpFpmPort
phpFpmPort=${phpFpmPort:-9000}
read -pr 'Mysql port (default: 3306): ' mysqlPort
mysqlPort=${mysqlPort:-3306}
read -pr 'Phpmyadmin port (default: 8081): ' phpmyadminPort
phpmyadminPort=${phpmyadminPort:-8081}
read -pr 'Elasticsearch port (default: 9200): ' elasticsearchPort
elasticsearchPort=${elasticsearchPort:-9200}
read -pr 'Mailcatcher port (default: 1080): ' mailcatcherPort
mailcatcherPort=${mailcatcherPort:-1080}
read -pr 'RabbitMQ port (default: 5672): ' rabbitMQPort
rabbitMQPort=${rabbitMQPort:-5672}
read -pr 'RabbitMQ admin port (default: 15672): ' rabbitMQAdminPort
rabbitMQAdminPort=${rabbitMQAdminPort:-15672}

read -pr 'MYSQL_ROOT_PASSWORD: ' dbRootPassword
read -pr 'MYSQL_DATABASE: ' databaseName
read -pr 'MYSQL_USER: ' dbUser
read -pr 'MYSQL_PASSWORD: ' dbPassword

function replaceStr {
  sed -i "s/$1/$2/g" "$3"
}

replaceStr project_name "$dockerName" ./docker-compose.yml

replaceStr nginxUnsecurePort "$nginxUnsecurePort" ./docker-compose.yml
replaceStr nginxSecurePort "$nginxSecurePort" ./docker-compose.yml
replaceStr phpFpmPort "$phpFpmPort" ./docker-compose.yml
replaceStr mysqlPort "$mysqlPort" ./docker-compose.yml
replaceStr phpmyadminPort "$phpmyadminPort" ./docker-compose.yml
replaceStr elasticsearchPort "$elasticsearchPort" ./docker-compose.yml
replaceStr mailcatcherPort "$mailcatcherPort" ./docker-compose.yml
replaceStr rabbitMQPort "$rabbitMQPort" ./docker-compose.yml
replaceStr rabbitMQAdminPort "$rabbitMQAdminPort" ./docker-compose.yml

replaceStr project_name "$dockerName" ./env/db.env
replaceStr db_root_password "$dbRootPassword" ./env/db.env
replaceStr db_name "$databaseName" ./env/db.env
replaceStr db_user_name "$dbUser" ./env/db.env
replaceStr db_user_password "$dbPassword" ./env/db.env

replaceStr db_name "$databaseName" ./images/mysql/create_database.sql
replaceStr db_user_name "$dbUser" ./images/mysql/create_database.sql
replaceStr db_user_password "$dbPassword" ./images/mysql/create_database.sql

replaceStr project_server_name "$serverName" ./conf/nginx/magento2.conf
replaceStr project_name "$dockerName" ./conf/nginx/magento2.conf.sample

replaceStr project_name "$dockerName" ./bin/cli
replaceStr project_name "$dockerName" ./bin/magento
replaceStr project_name "$dockerName" ./bin/rm
replaceStr project_name "$dockerName" ./bin/create_dump
replaceStr db_name "$databaseName" ./bin/create_dump
replaceStr db_user_name "$dbUser" ./bin/create_dump
replaceStr project_name "$dockerName" ./bin/from_dump
replaceStr db_name "$databaseName" ./bin/from_dump
replaceStr db_user_name "$dbUser" ./bin/from_dump


